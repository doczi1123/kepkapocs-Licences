#  ez elk√©sziti a public.pem et √©s a private.pem -et

from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import rsa
import os

def generate_key_pair(private_path="private.pem", public_path="public.pem"):
    print("üîß RSA kulcsp√°r gener√°l√°sa...")

    # Priv√°t kulcs l√©trehoz√°sa
    private_key = rsa.generate_private_key(
        public_exponent=65537,
        key_size=2048
    )

    # Priv√°t kulcs ment√©se
    with open(private_path, "wb") as priv_file:
        priv_file.write(
            private_key.private_bytes(
                encoding=serialization.Encoding.PEM,
                format=serialization.PrivateFormat.PKCS8,
                encryption_algorithm=serialization.NoEncryption()
            )
        )

    # Publikus kulcs kivon√°sa √©s ment√©se
    public_key = private_key.public_key()
    with open(public_path, "wb") as pub_file:
        pub_file.write(
            public_key.public_bytes(
                encoding=serialization.Encoding.PEM,
                format=serialization.PublicFormat.SubjectPublicKeyInfo
            )
        )

    print(f"‚úÖ Kulcsp√°r elk√©sz√ºlt:\nüîë Priv√°t: {private_path}\nüîì Publikus: {public_path}")

if __name__ == "__main__":
    generate_key_pair()
